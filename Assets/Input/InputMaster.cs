//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Pointer"",
            ""id"": ""134d31d6-0291-4f7e-ad90-e8e844b87c1f"",
            ""actions"": [
                {
                    ""name"": ""DragPos"",
                    ""type"": ""Value"",
                    ""id"": ""a8c3778b-57d0-4eb4-838f-6fb2fa70d39a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DragDelta"",
                    ""type"": ""Value"",
                    ""id"": ""28c0c62f-c59d-4d04-8349-28aac543129b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EndDrag"",
                    ""type"": ""Button"",
                    ""id"": ""6c0627ba-d349-4133-8da0-82cbce696c1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DragStartPos"",
                    ""type"": ""Value"",
                    ""id"": ""90090dd0-b467-44f1-9f69-4d2d5b3694cc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""65d6b61b-fdcc-463c-b708-674f5d7d53e0"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e054d6e3-6d96-473a-b857-0a3d944f5aa6"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c55d916-3ffb-4891-b5f5-b5c952b501ed"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EndDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""346d1540-b6bf-44ff-8ccf-c2b1b8ea61e9"",
                    ""path"": ""<Touchscreen>/primaryTouch/startPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragStartPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Pointer
        m_Pointer = asset.FindActionMap("Pointer", throwIfNotFound: true);
        m_Pointer_DragPos = m_Pointer.FindAction("DragPos", throwIfNotFound: true);
        m_Pointer_DragDelta = m_Pointer.FindAction("DragDelta", throwIfNotFound: true);
        m_Pointer_EndDrag = m_Pointer.FindAction("EndDrag", throwIfNotFound: true);
        m_Pointer_DragStartPos = m_Pointer.FindAction("DragStartPos", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Pointer
    private readonly InputActionMap m_Pointer;
    private IPointerActions m_PointerActionsCallbackInterface;
    private readonly InputAction m_Pointer_DragPos;
    private readonly InputAction m_Pointer_DragDelta;
    private readonly InputAction m_Pointer_EndDrag;
    private readonly InputAction m_Pointer_DragStartPos;
    public struct PointerActions
    {
        private @InputMaster m_Wrapper;
        public PointerActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @DragPos => m_Wrapper.m_Pointer_DragPos;
        public InputAction @DragDelta => m_Wrapper.m_Pointer_DragDelta;
        public InputAction @EndDrag => m_Wrapper.m_Pointer_EndDrag;
        public InputAction @DragStartPos => m_Wrapper.m_Pointer_DragStartPos;
        public InputActionMap Get() { return m_Wrapper.m_Pointer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PointerActions set) { return set.Get(); }
        public void SetCallbacks(IPointerActions instance)
        {
            if (m_Wrapper.m_PointerActionsCallbackInterface != null)
            {
                @DragPos.started -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragPos;
                @DragPos.performed -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragPos;
                @DragPos.canceled -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragPos;
                @DragDelta.started -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragDelta;
                @DragDelta.performed -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragDelta;
                @DragDelta.canceled -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragDelta;
                @EndDrag.started -= m_Wrapper.m_PointerActionsCallbackInterface.OnEndDrag;
                @EndDrag.performed -= m_Wrapper.m_PointerActionsCallbackInterface.OnEndDrag;
                @EndDrag.canceled -= m_Wrapper.m_PointerActionsCallbackInterface.OnEndDrag;
                @DragStartPos.started -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragStartPos;
                @DragStartPos.performed -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragStartPos;
                @DragStartPos.canceled -= m_Wrapper.m_PointerActionsCallbackInterface.OnDragStartPos;
            }
            m_Wrapper.m_PointerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DragPos.started += instance.OnDragPos;
                @DragPos.performed += instance.OnDragPos;
                @DragPos.canceled += instance.OnDragPos;
                @DragDelta.started += instance.OnDragDelta;
                @DragDelta.performed += instance.OnDragDelta;
                @DragDelta.canceled += instance.OnDragDelta;
                @EndDrag.started += instance.OnEndDrag;
                @EndDrag.performed += instance.OnEndDrag;
                @EndDrag.canceled += instance.OnEndDrag;
                @DragStartPos.started += instance.OnDragStartPos;
                @DragStartPos.performed += instance.OnDragStartPos;
                @DragStartPos.canceled += instance.OnDragStartPos;
            }
        }
    }
    public PointerActions @Pointer => new PointerActions(this);
    public interface IPointerActions
    {
        void OnDragPos(InputAction.CallbackContext context);
        void OnDragDelta(InputAction.CallbackContext context);
        void OnEndDrag(InputAction.CallbackContext context);
        void OnDragStartPos(InputAction.CallbackContext context);
    }
}
